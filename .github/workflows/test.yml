name: Test Chrome Extension

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run tests
      run: pnpm test
      
    - name: Run tests with coverage
      run: pnpm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == 20
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: chrome-extension-coverage
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Check if lint script exists
      id: check-lint
      run: |
        if pnpm run --if-present lint --dry-run > /dev/null 2>&1; then
          echo "has-lint=true" >> $GITHUB_OUTPUT
        else
          echo "has-lint=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Run linter
      if: steps.check-lint.outputs.has-lint == 'true'
      run: pnpm run lint
      
    - name: Check if typecheck script exists
      id: check-typecheck
      run: |
        if pnpm run --if-present typecheck --dry-run > /dev/null 2>&1; then
          echo "has-typecheck=true" >> $GITHUB_OUTPUT
        else
          echo "has-typecheck=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Run type checking
      if: steps.check-typecheck.outputs.has-typecheck == 'true'
      run: pnpm run typecheck

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Check if build script exists
      id: check-build
      run: |
        if pnpm run --if-present build --dry-run > /dev/null 2>&1; then
          echo "has-build=true" >> $GITHUB_OUTPUT
        else
          echo "has-build=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Build extension
      if: steps.check-build.outputs.has-build == 'true'
      run: pnpm run build
      
    - name: Validate manifest
      run: |
        if [ -f "manifest.json" ]; then
          echo "‚úÖ manifest.json found"
          # Basic JSON validation
          cat manifest.json | jq empty && echo "‚úÖ manifest.json is valid JSON" || (echo "‚ùå manifest.json is invalid JSON" && exit 1)
        else
          echo "‚ùå manifest.json not found"
          exit 1
        fi
      
    - name: Check extension structure
      run: |
        echo "üìÅ Extension structure:"
        ls -la
        echo ""
        echo "üìã Required files check:"
        [ -f "manifest.json" ] && echo "‚úÖ manifest.json" || echo "‚ùå manifest.json"
        [ -f "background.js" ] && echo "‚úÖ background.js" || echo "‚ö†Ô∏è  background.js (optional)"
        [ -f "popup.html" ] && echo "‚úÖ popup.html" || echo "‚ö†Ô∏è  popup.html (optional)"
        [ -f "popup.js" ] && echo "‚úÖ popup.js" || echo "‚ö†Ô∏è  popup.js (optional)"
        [ -d "icons" ] && echo "‚úÖ icons directory" || echo "‚ö†Ô∏è  icons directory (optional)"