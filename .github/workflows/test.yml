name: Test Chrome Extension

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['latest']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run tests
      run: pnpm test
      
    - name: Run tests with coverage
      run: pnpm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == 20
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: chrome-extension-coverage
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linter
      run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Validate extension structure
      run: |
        echo "üìÅ Chrome Extension Structure Check"
        echo "======================================"
        echo ""
        echo "üìã Required files:"
        [ -f "manifest.json" ] && echo "‚úÖ manifest.json" || (echo "‚ùå manifest.json missing" && exit 1)
        
        echo ""
        echo "üìã Extension files:"
        [ -f "background.js" ] && echo "‚úÖ background.js" || echo "‚ÑπÔ∏è  background.js (not present)"
        [ -f "popup.html" ] && echo "‚úÖ popup.html" || echo "‚ÑπÔ∏è  popup.html (not present)"
        [ -f "popup.js" ] && echo "‚úÖ popup.js" || echo "‚ÑπÔ∏è  popup.js (not present)"
        [ -f "confirmation-dialog.html" ] && echo "‚úÖ confirmation-dialog.html" || echo "‚ÑπÔ∏è  confirmation-dialog.html (not present)"
        [ -f "confirmation-dialog.js" ] && echo "‚úÖ confirmation-dialog.js" || echo "‚ÑπÔ∏è  confirmation-dialog.js (not present)"
        [ -d "icons" ] && echo "‚úÖ icons/ directory" || echo "‚ÑπÔ∏è  icons/ directory (not present)"
        
        echo ""
        echo "‚úÖ Extension structure validation complete"
      
    - name: Validate manifest.json
      run: pnpm run validate